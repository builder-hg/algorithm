"""
이동 가능 거리 : k - 1, k, k + 1

1) prev = 0
-1, 0, 1
사실상 1 광년 이동 가능

2) prev = 1
0, 1, 2 광년 이동 가능 

3) prev = 2
1, 2, 3 광년 이동 가능
"""
"""
1, 2, 3, 4, 5, ... N, 1씩 증가하는 등차수열
N항까지의 합은 (N * (1 + N)) / 2 이다.
이 합이 전체길이의 절반보다 작거나 같도록 하는 최대의 N을 구해야 한다.

s = 0, e = 9
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

거리에 따른 이동양상
1, 1        => 1
2, 11       => 2
3, 111      => 3
4, 121      => 3
5, 1211     => 4
6, 1221     => 4
7, 12211    => 5
8, 12221    => 5
9, 12321    => 5
10, 123211  => 
11, 123221
12, 1232211
13, 1233211
"""
import sys
input = sys.stdin.readline

Q = int(input())
while Q:
    Q -= 1

    S, E = map(int, input().split())
    dis = E - S             # 총 거리 
    cur = 0                 # 현재 위치
    ans = 0                 # 답, 이동장치 작동횟수
    step = 0

    while cur < dis:
        ans += 1    # 이동장치 작동

        if ans % 2:
            step += 1

        cur += step

    print(ans)

"""
1, 2, 4, 6, 9, 12, 16, 20
 1  2  2  3  3 
"""